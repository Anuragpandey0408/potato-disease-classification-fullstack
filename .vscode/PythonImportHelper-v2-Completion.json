[
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "UploadFile",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "File",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "uvicorn",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uvicorn",
        "description": "uvicorn",
        "detail": "uvicorn",
        "documentation": {}
    },
    {
        "label": "BytesIO",
        "importPath": "io",
        "description": "io",
        "isExtraImport": true,
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "numpy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "numpy",
        "description": "numpy",
        "detail": "numpy",
        "documentation": {}
    },
    {
        "label": "tensorflow",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "tensorflow",
        "description": "tensorflow",
        "detail": "tensorflow",
        "documentation": {}
    },
    {
        "label": "read_file_as_image",
        "kind": 2,
        "importPath": "api.main",
        "description": "api.main",
        "peekOfCode": "def read_file_as_image(data) -> np.ndarray:\n  image = np.array(Image.open(BytesIO(data)))\n  return image\n@app.post(\"/predict\")\nasync def predict (\n    file: UploadFile = File(...)\n):\n    image = read_file_as_image(await file.read())\n    img_batch = np.expand_dims(image, 0)\n    predictions = MODEL.predict(img_batch)    ",
        "detail": "api.main",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "api.main",
        "description": "api.main",
        "peekOfCode": "app = FastAPI()\nMODEL = tf.keras.models.load_model(\"../saved_models/1.keras\")\nCLASS_NAMES = [\"Early Blight\", \"Late Blight\", \"Healthy\"]\n@app.get(\"/ping\")\nasync def ping():\n    return \"Hello, i am alive\"\ndef read_file_as_image(data) -> np.ndarray:\n  image = np.array(Image.open(BytesIO(data)))\n  return image\n@app.post(\"/predict\")",
        "detail": "api.main",
        "documentation": {}
    },
    {
        "label": "MODEL",
        "kind": 5,
        "importPath": "api.main",
        "description": "api.main",
        "peekOfCode": "MODEL = tf.keras.models.load_model(\"../saved_models/1.keras\")\nCLASS_NAMES = [\"Early Blight\", \"Late Blight\", \"Healthy\"]\n@app.get(\"/ping\")\nasync def ping():\n    return \"Hello, i am alive\"\ndef read_file_as_image(data) -> np.ndarray:\n  image = np.array(Image.open(BytesIO(data)))\n  return image\n@app.post(\"/predict\")\nasync def predict (",
        "detail": "api.main",
        "documentation": {}
    },
    {
        "label": "CLASS_NAMES",
        "kind": 5,
        "importPath": "api.main",
        "description": "api.main",
        "peekOfCode": "CLASS_NAMES = [\"Early Blight\", \"Late Blight\", \"Healthy\"]\n@app.get(\"/ping\")\nasync def ping():\n    return \"Hello, i am alive\"\ndef read_file_as_image(data) -> np.ndarray:\n  image = np.array(Image.open(BytesIO(data)))\n  return image\n@app.post(\"/predict\")\nasync def predict (\n    file: UploadFile = File(...)",
        "detail": "api.main",
        "documentation": {}
    }
]